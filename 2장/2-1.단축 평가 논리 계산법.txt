논리 연산자를 사용 할 때에는 무조건 우리가 true혹은 false값을 사용해야 되는 것은 아님
문자열이나 숫자, 객체를 사용 할 수도 있고 해당 값이 Truthy하냐 Falsy하냐에 따라 결과가 달라짐
ex)
const dog = {
  name: '멍멍이'
};

function getName(animal) {
  return animal.name;
}

const name = getName(dog);
console.log(name); // 멍멍이

getName의 파라미터에 제대로된 객체가 주어지지 않으면

const dog = {
  name: '멍멍이'
};

function getName(animal) {
  return animal.name;
}

const name = getName();
console.log(name);

animal객체가 undefined이기 때문에 undefined에서 name값을 조회 할 수 없어서 에러가 발생

만약 함수에서 animal 값이 제대로 주어졌을 때만 name을 조회하고
그렇지 않을때는 undefined를 반환하게 하고 싶다면

const dog = {
  name: '멍멍이'
};

function getName(animal) {
  if (animal) {
    return animal.name;
  }
  return undefined;
}

const name = getName();
console.log(name);

animal 값이 주어지지 않아도 에러가 발생하지 않게됨
코드를 논리 연산자를 사용하면 코드를 단축시킬 수 있음

-&&연산자로 코드 단축시키기-
ex)
const dog = {
  name: '멍멍이'
};

function getName(animal) {
  return animal && animal.name;
}

const name = getName();
console.log(name); // undefined

파라미터를 넣어서 호출
const dog = {
  name: '멍멍이'
};

function getName(animal) {
  return animal && animal.name;
}

const name = getName(dog);
console.log(name); // 멍멍이

작동하는 이뉴는 A&&B연산자를 사용하게 될 때에는 A가 Truthy 한 값이라면, B가 결과값이 됨
A가 Falsy 한 값이라면 결과는 A가 됨

ex)
console.log(true && 'hello'); // hello
console.log(false && 'hello'); // false
console.log('hello' && 'bye'); // bye
console.log(null && 'hello'); // null
console.log(undefined && 'hello'); // undefined
console.log('' && 'hello'); // ''
console.log(0 && 'hello'); // 0
console.log(1 && 'hello'); // hello
console.log(1 && 1); // 1

특정 값이 유효할때에만 어떤 값을 조회하는 작업을 해야 할 때 매우 유용함

-||연산자로 코드 단축시키기-
||연산자는 만약 어떤 값이 Falsy하다면 대체로 사용할 값을 지정해줄 때 매우 유용하게 사용 할 수 있음

ex)
const namelessDog = {
  name: ''
};

function getName(animal) {
  const name = animal && animal.name;
  if (!name) {
    return '이름이 없는 동물입니다';
  }
  return name;
}

const name = getName(namelessDog);
console.log(name); // 이름이 없는 동물입니다.

||연산자를 통해 코드 단축하면
const namelessDog = {
  name: ''
};

function getName(animal) {
  const name = animal && animal.name;
  return name || '이름이 없는 동물입니다.';
}

const name = getName(namelessDog);
console.log(name); // 이름이 없는 동물입니다.

A||B는 만약 A가 Truthy할 경우 결과는 A가 됨
A가 Faly하다면 결과는 B가 됨

