연산자는 프로그래밍 언어에서 특정 연산을 하도록 하는 문자임

ex)
let value = 1;	//변수 선언
value = 2;	//대입 연산자

=문자가 연산자임
=는 대입 연산자에 해당함
첫번째 줄은 새로운 변수를 선언하는 것, 대입 연산자에 해당하지 않음

-산술 연산자-
• +: 덧셈
• -: 뺄셈
• *: 곱셈
• /: 나눗셈

ex)
let a = 1+2;
console.log(a);	//3이 출력

++는 특정 변수에 1을 바로 더해 줌
++가 변수 이름 앞에 오는 것과 뒤에 오는 것에 차이가 있음

ex)
let a = 1;
console.log(a++);	//1이 출력
console.log(++a);	//2가 출력

console.log(a++);를 할 때에는 1을 더하기 직전 값을 보여주고 console.log(++a);를 할때에는 1을 더한 다음 값을 보여준다는 차이가 있음

ex)
let a = 1;
a--;
console.log(a);	//0이 출력

-대입 연산자-
대입 연산자는 특정 값에 연산을 한 값을 바로 설정 할 대 사용 할 수 있는 연산자

ex)
let a = 1;
a = a + 3;
위 코드를 대입 연산자를 사용하면 

let a = 1; 
a += 3;
덧셈말고 다른 연산도 가능함

ex)
let a = 1;
a += 3;
a -= 3;
a *= 3;
a /= 3;
console.log(a);	//1이 출력

-논리 연산자-
논리 연산자는 boolean타입을 위한 연산자임

• !: NOT
• &&: AND
• ||: OR

-NOT-
NOT연산자는 true는 false로, false는 true로 바꿈

-AND-
AND연산자는 양쪽의 값이 둘다 true 일때만 결과물이 true임

-OR-
OR연산자는 양쪽의 값 중 하나라도 true라면 결과물이 true임
두 값이 둘 다 false일때에만 flase임

-연산순서-
논리 연산자 순서 NOT -> AND-> OR
괄호로 감싸져있을 때에는 가장 마지막에 처리를 하니까 맨 앞 NOT은 나중에 처리함

-비교 연산자-
비교 연산자는 두 값을 비교 할 때 사용 할 수 있음

--두 값이 일치하는지 확인--
ex)
const a = 1;
const b = 1;
const equals = a === b;
console.log(equals);	//true출력

===는 두 값이 일치하는지 확인
일치하면 true, 일치하지 않으면 false가 나타남

두 값이 일치 하는지 확인 할 때 = 문자를 3번 사용하는데, 2로도 비교를 할 수는 있음

ex)
const a = 1;
const b = 1;
const equals = a == b;
console.log(equals);	//true출력

=문자가 3개 있을 때와 2개 있을 때의 차이점은 2개 있을때에는 타입 검사까지 않는다는 것

1과 '1'도 같은 값으로 간주
0과 flase도 같은 값은로 간주
undefined와 null도 같은 값으로 간주

--두 값이 일치하지 않는지 확인--
두 값이 일치하지 않는지 확인 할 때에는 !==를 사용하면 됨

ex)
const value = 'a' !== 'b';	//true가 됨

!=를 사용하게 되면 타입 검사를 하지 않음
ex)
console.log(1 != '1');	//false가 출력
console.log(1 !== '1');	//true가 출력

--크고 작음--
두 값 중에서 무엇이 더 크고 작은지 비교하기 위해서는 다음 연산자를 사용
ex)
const a = 10;
const b = 15;
const c = 15;

console.log(a < b); // true가 출력
console.log(b > a); // true가 출력
console.log(b >= c); // true가 출력
console.log(a <= c); // true가 출력
console.log(b < c); // false가 출력

-문자열 붙이기-
두 문자열을 붙일때에는 +로 할 수 있음
ex)
const a = '안녕';
const b = '하세요';
console.log(a + b); // 안녕하세요


